name: Java CI with Gradle # workflow 이름

on:
  push:
    branches: ['fix/#149-deploy']

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: make application.yml
        run: |
          # create application.yml
          cd ./back-end/src/main/resources

          # application.yml 파일에 쓰기
          echo "${{ secrets.DATABASE }}" >> ./application.yml
        shell: bash

      - name: Build with Gradle
        run: |
          cd ./back-end
          ./gradlew clean build
      ## 도커 로그인
      - name: Docker Hub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      ## 도커 이미지 빌드 후 도커허브에 push하기가
      ## 테스트용 도커 이미지 삭제하기
      - name: web docker build and push
        run: |
          cd ./back-end
          docker build -t ${{ secrets.DOCKER_REPO }}-server:latest .
          docker push ${{ secrets.DOCKER_REPO }}-server:latest
      - name: web docker build and push
        run: |
          cd ./front-end
          echo "${{ secrets.ENV }}" >> ./.env.local
          docker build -t ${{ secrets.DOCKER_REPO }}-front:latest .
          docker push ${{ secrets.DOCKER_REPO }}-front:latest
      ## 서버에 접속하여 도커 이미지를 pull 받고 실행하기
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.KEY }}
          port: 22
          script: |
            ./docker.sh ${{ secrets.DOCKER_REPO }}
